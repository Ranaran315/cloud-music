@use '../bem' as * with (
  $block: 'search'
);

@use '../var' as *;

$width: 300px;
$size: 50px;
@mixin active {
  width: $width;
  border-radius: $size;
  padding-right: 10px;
}

@include b() {
  display: flex;
  align-items: center;
  width: fit-content;

  @include e('trigger') {
    width: fit-content;
    position: relative;
  }

  .ra-input {
    width: $size;
    height: $size;
    border-radius: 50%;
    padding: 0;
    transition: width 0.3s, border-radius 0.3s;
    outline-color: getColor('primary');
    caret-color: getColor('primary');
    &:focus-within {
      @include active();
    }
    &:hover {
      @include active();
    }
    .ra-button {
      max-width: $size;
      width: $size;
      height: $size;
      border-radius: 50%;
      font-size: 1.5rem;
      background-color: getColor('primary');
      &:active:not(:disabled) {
        transform: scale(1);
      }
    }
  }
}

@include e('popover') {
  width: $width;
  background-color: getFillColor();
  @include e('search-list') {
    width: 100%;
    max-height: 300px;
    padding: 10px 0;
    margin: 0;
    overflow: auto;
    @include e('title') {
      width: 100%;
      text-align: left;
      padding: 5px 20px;
      font-weight: 700;
      font-size: 1.2rem;
      box-sizing: border-box;
    }
    @include e('subtitle') {
      width: 100%;
      text-align: left;
      padding: 5px 20px;
      box-sizing: border-box;
      font-weight: 700;
      color: getTextColor('third');
      background-color: getFillColor('third');
    }
    @include e('search-item') {
      width: 100%;
      padding: 10px 20px;
      cursor: pointer;
      box-sizing: border-box;
      display: flex;
      align-items: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      .index {
        margin-right: 15px;
        color: getTextColor('secondary');
      }
      &:hover {
        background-color: getFillColor('secondary');
        .word {
          color: getColor('primary');
        }
      }
      &:nth-child(-n + 4) {
        .index {
          color: getColor('primary');
        }
      }
    }
  }
}
